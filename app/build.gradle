import java.text.SimpleDateFormat

apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.lzq.wanandroid"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode getIncreasedVersionCode()
        versionName getIncreasedVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk { abiFilters "armeabi", "armeabi-v7a", "armeabi-v8a", "x86", "x86_64", "mips" }
    }
    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true  //开启Zipalign优化
            shrinkResources true  //移除无用的resource文件，此项只有在开启混淆时才生效
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled true
            zipAlignEnabled true  //开启Zipalign优化
            shrinkResources true  //移除无用的resource文件，此项只有在开启混淆时才生效
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "WanAndroid_${variant.versionName}_${variant.versionCode}_${variant.name}.apk"
        }
    }

}

//versionCode取时间戳对应的天数（即1970.1.1到当前天数）
def getVersion() {
    return (int) (System.currentTimeMillis() / (1000 * 60 * 60 * 24))
}

def getIncreasedVersionName() {
    return (String) ("1.0." + getVersion())
}


def getIncreasedVersionCode() {// 获取版本号
    def versionFile = file('version.properties')// 读取第一步新建的文件
    if (versionFile.canRead()) {// 判断文件读取异常
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['VERSION_CODE'].toInteger()// 读取文件里面的版本号
        switch (gradle.startParameter.toString().split("\\,").length) {
            case 31://仅在Release时增加版本号,其他渠道包在此分别配置
            case 28:
                versionCode = versionCode + 1
                versionProps['VERSION_CODE'] = String.valueOf(versionCode)
                versionProps.store(versionFile.newWriter(), null)
            case 24://Build Ctrl+F9
            case 27://Clean Project
            case 34://Debug shift+F10
                break
            default:
                versionProps.put("UN_DEFINED" + new SimpleDateFormat("yyMMddHHmmss").format(new Date()),
                        String.valueOf(gradle.startParameter.toString().split("\\,").length))
                versionProps.store(versionFile.newWriter(), null)
        }
        return (int) versionCode // 返回自增之后的版本号
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    implementation 'com.android.support:cardview-v7:28.0.0'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    //控件绑定框架
    implementation 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    //Toast吐司弹窗工具
    implementation 'com.hjq:toast:6.0'
    implementation 'com.hjq:xtoast:2.6'
    //轮子哥titlebar框架
    implementation 'com.hjq:titlebar:5.0'
    //动态申请权限
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    //RecyclerViewAdapterHelper
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.44'
    //底部导航栏
    implementation 'com.lzy.widget:view-core:0.1.5'
    //图片加载库
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    //沉浸式顶栏框架
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0-beta02'
    implementation 'com.gyf.immersionbar:immersionbar-components:3.0.0-beta02'
    //OkHttp,后期会用OKGo逐渐代替okhttp
    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.lzy.net:okgo:3.0.4'
    //GSON库
    implementation 'com.google.code.gson:gson:2.8.5'
    //图片轮播
    implementation 'com.github.wenchaosong:Banner:2.3.9'
    //底部导航栏
    implementation 'com.github.wenchaosong:BottomBar:3.0.7'
    //帮助类
    implementation 'com.blankj:utilcode:1.23.7'
    //加载动画
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-24'
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-24'
    implementation 'com.github.zcweng:switch-button:0.0.3@aar'
    //事件传递
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation files('libs/tbs_sdk_thirdapp_v4.3.0.1072_43646_sharewithdownloadwithfile_withoutGame_obfs_20190429_175122.jar')
    //X5内核
    implementation 'com.just.agentwebX5:agentwebX5:2.0.0'
    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    //流式布局
    implementation 'com.hyman:flowlayout-lib:1.1.2'
    //LitePal
    implementation 'org.litepal.android:java:3.0.0'
    implementation files('libs/commons-lang3-3.8.1.jar')
    //滑动返回
    implementation 'cn.bingoogolapple:bga-swipebacklayout:1.2.0@aar'
}
